package com.martinojones.vulnerabilityfeed;

import android.content.Intent;
import android.content.SharedPreferences;
import android.graphics.Color;
import android.net.Uri;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.support.v7.app.AppCompatActivity;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.ShareActionProvider;
import android.widget.TextView;
import com.google.android.gms.ads.AdRequest;
import com.google.android.gms.ads.AdView;
import com.google.android.gms.ads.MobileAds;
import com.google.gson.Gson;
import com.google.gson.JsonObject;

/**
 * Created by marti on 6/14/2016.
 */
public class Details extends AppCompatActivity {

    private TextView cveTextBox;
    private TextView descText;
    private Button urlGO;
    private Button savevuln;
    private String URL;
    private TextView DATE;
    private TextView CVS;
    private LinearLayout RL;
    private AdView mAdView;
    private ShareActionProvider mShareActionProvider;
    public static final String PREFS_NAME = "MyPrefsFile";
    private String CVE;
    private TextView exCount;
    private TextView additional;

    @Override
    protected void onCreate(Bundle savedInstanceState)
    {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.details);

        // Restore preferences
        final SharedPreferences settings = getSharedPreferences(PREFS_NAME, 0);
        final SharedPreferences.Editor editor = settings.edit();


        //Ad
        MobileAds.initialize(this, "ca-app-pub-4322762307046838/5409497186");

        // Gets the ad view defined in layout/ad_fragment.xml with ad unit ID set in
        // values/strings.xml.
        mAdView = (AdView) findViewById(R.id.adView);


        //Assign textbox
        cveTextBox = (TextView) findViewById(R.id.cveText);
        descText = (TextView) findViewById(R.id.descText);
        urlGO = (Button) findViewById(R.id.urlGo);
        DATE = (TextView) findViewById(R.id.dateText);
        CVS = (TextView) findViewById(R.id.csvScore);
        exCount = (TextView) findViewById(R.id.exploitCount);
        additional = (TextView) findViewById(R.id.additionalInformation);
        savevuln = (Button) findViewById(R.id.savevuln);

        RL = (LinearLayout)findViewById(R.id.Layout);


        //Check if vulnerability is saved
        if(settings.getString(getIntent().getExtras().getString("CVE"), null) != null)
        {
            savevuln.setText("Saved");
        }


        //Grab the text from the extras
        final String DESC = getIntent().getExtras().getString("DESC");
        CVE = getIntent().getExtras().getString("CVE");
        URL = getIntent().getExtras().getString("URL");
        final String strDATE = getIntent().getExtras().getString("DATE");
        final String cvsScore = Float.toString(getIntent().getExtras().getFloat("CSV"));
        final String explotCount = getIntent().getExtras().getString("EXCOUNT");


        //URL listner
        urlGO.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                if(URL != null)
                {
                    Uri uriUrl = Uri.parse(URL);
                    Intent launchBrowser = new Intent(Intent.ACTION_VIEW, uriUrl);
                    startActivity(launchBrowser);
                }
            }
        });

        //Listener for saving the vulnerablility
        savevuln.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {

                if(savevuln.getText() != "Saved")
                {
                    JsonObject vulnerability = new JsonObject();
                    vulnerability.addProperty("CVE", getIntent().getExtras().getString("CVE"));
                    vulnerability.addProperty("URL", URL);
                    vulnerability.addProperty("strDATE", strDATE);
                    vulnerability.addProperty("cvsScore", cvsScore);
                    vulnerability.addProperty("explotCount", explotCount);
                    vulnerability.addProperty("DESC", DESC);
                    editor.putString(getIntent().getExtras().getString("CVE"), vulnerability.toString());
                    editor.commit();

                    savevuln.setText("Saved");
                }
                else
                {
                    editor.remove(CVE);
                    editor.commit();
                    savevuln.setText("Save");
                }

            }
        });

        //Set the text in the UI
        cveTextBox.setText(CVE);
        descText.setText(DESC);
        DATE.setText(strDATE);
        CVS.setText("CVS Score: " + cvsScore + " / 10");
        exCount.setText("Known exploits: " + explotCount);

        //Setup description box
        descText.setKeyListener(null);


        //Additonal information
        if(cvsScore.equals("0.0"))
        {
            additional.setText("If a vulnerability has a CVS score of 0 check again later when a CVS score has been given to that vulnerability.");
        }
        else
        {
            additional.setText("");
        }


    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.share, menu);

        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();

        //noinspection SimplifiableIfStatement
        if (id == R.id.action_share) {

            Intent sendIntent = new Intent();
            sendIntent.setAction(Intent.ACTION_SEND);
            sendIntent.putExtra(Intent.EXTRA_TEXT, URL);
            sendIntent.putExtra(Intent.EXTRA_SUBJECT, CVE);
            sendIntent.putExtra(Intent.EXTRA_TITLE, CVE);
            sendIntent.setType("text/plain");
            startActivity(Intent.createChooser(sendIntent, getResources().getText(R.string.app_name)));
        }
        else if(id == android.R.id.home){
            finish();
        }


        return super.onOptionsItemSelected(item);
    }


    public static class AdFragment extends Fragment {
        @Override
        public View onCreateView(LayoutInflater inflater, ViewGroup container,
                                 Bundle savedInstanceState) {
            return inflater.inflate(R.layout.fragment_ad, container, false);
        }

        @Override
        public void onActivityCreated(Bundle bundle) {
            super.onActivityCreated(bundle);
            AdView mAdView = (AdView) getView().findViewById(R.id.adView);
            AdRequest adRequest = new AdRequest.Builder().build();
            mAdView.loadAd(adRequest);
        }

    }
}
