package com.martinojones.vulnerabilityfeed;

import android.content.Intent;
import android.content.SharedPreferences;
import android.net.Uri;
import android.os.Bundle;
import android.os.Handler;
import android.support.v4.widget.SwipeRefreshLayout;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.Toolbar;
import android.util.Log;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.ListView;

import com.android.volley.Request;
import com.android.volley.RequestQueue;
import com.android.volley.Response;
import com.android.volley.VolleyError;
import com.android.volley.toolbox.StringRequest;
import com.android.volley.toolbox.Volley;

import org.json.JSONException;
import org.json.JSONObject;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

public class MainActivity extends AppCompatActivity
{
    private ListView listView;
    private ArrayAdapter<Vulnerability> arrayAdapter = null;
    private SwipeRefreshLayout swipeRefresh;
    private List<Vulnerability> SavedVulns;

    //Settings
    private static final String PREFS_NAME = "MyPrefsFile";
    protected static String savedNumOfVulns = "30";
    protected static String minCVE = "0";

    private RequestQueue requestQueue;


    @Override
    protected void onCreate(Bundle savedInstanceState)
    {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);

        requestQueue = Volley.newRequestQueue(this);

        // Restore preferences
        SharedPreferences settings = getSharedPreferences(PREFS_NAME, 0);
        savedNumOfVulns = settings.getString("SHOWVULNS", "30");
        minCVE = settings.getString("MINCVE", "0");
        SavedVulns = new ArrayList<Vulnerability>();


        //Toast.makeText(getApplicationContext(), "Getting the latest vulnerabilities...", Toast.LENGTH_SHORT).show();

        Button btnParse = (Button) findViewById(R.id.btn_pass);
        listView = (ListView) findViewById(R.id.xmlListView);
        swipeRefresh = (SwipeRefreshLayout) findViewById(R.id.swipe_refresh);

        swipeRefresh.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener()
        {
            @Override
            public void onRefresh()
            {
                listView.setAdapter(null);

                fetchVulnerabilities();

            }

        });


        listView.setOnItemClickListener(new AdapterView.OnItemClickListener()
        {
            @Override
            public void onItemClick(AdapterView<?> arg0, View arg1, int position, long arg3)
            {

                Intent intent = new Intent(getApplicationContext(), VulnerabilityDetails.class);
                intent.putExtra("URL", ((Vulnerability)arg0.getItemAtPosition(position)).getUrl());
                intent.putExtra("CVE", ((Vulnerability)arg0.getItemAtPosition(position)).getName());
                intent.putExtra("DESC", ((Vulnerability)arg0.getItemAtPosition(position)).getDescription());
                intent.putExtra("DATE", ((Vulnerability)arg0.getItemAtPosition(position)).getDate());
                intent.putExtra("CSV", ((Vulnerability)arg0.getItemAtPosition(position)).getCvsScore());
                intent.putExtra("EXCOUNT", ((Vulnerability)arg0.getItemAtPosition(position)).getExploitCount());
                startActivity(intent);

            }
        });


        fetchVulnerabilities();
    }

    @Override
    public void onResume()
    {
        super.onResume();  // Always call the superclass method first
        Log.d("ONRESUME", "RESUMED");
    }


    private void getSavedVulns()
    {
        SavedVulns.clear();

        SharedPreferences settings = getSharedPreferences(PREFS_NAME, 0);
        Map<String, ?> allEntries = settings.getAll();

        for (Map.Entry<String, ?> entry : allEntries.entrySet()) {
            Log.d("map values", entry.getKey() + ": " + entry.getValue().toString());

            if(entry.getValue().toString().contains("CVE"))
            {
                JSONObject vulnerability = null;
                try {
                    vulnerability = new JSONObject(entry.getValue().toString());
                } catch (JSONException e) {
                    e.printStackTrace();
                }
                vulnerability.equals(entry.getValue());


                //Try to add each found CVE in the saved preferences to the SaveVulns List
                try {
                    SavedVulns.add(new Vulnerability(entry.getKey(),
                            vulnerability.getString("DESC"),
                            vulnerability.getString("strDATE"),
                            vulnerability.getString("URL"),
                            vulnerability.getLong("cvsScore"),
                            vulnerability.getString("explotCount")));
                } catch (JSONException e) {
                    e.printStackTrace();
                }
            }

            //Mark all the saved CVEs
            for(Vulnerability cve : SavedVulns)
            {
                cve.setSaved(true);
            }

        }
    }



    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.menu_main, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();

        //noinspection SimplifiableIfStatement
        if (id == R.id.action_about) {
            Intent intent = new Intent(getApplicationContext(), About.class);
            startActivity(intent);
            return true;
        }
        else if(id == R.id.action_rate)
        {
            startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse("https://play.google.com/store/apps/details?id=com.martinojones.vulnerabilityfeed")));
            return true;
        }
        else if(id == R.id.action_settings)
        {
            Intent settingsIntent = new Intent(getApplicationContext(), Settings.class);
            startActivity(settingsIntent);

        }

        return super.onOptionsItemSelected(item);
    }

    private void fetchVulnerabilities() {
        String ENDPOINT = "https://www.cvedetails.com/json-feed.php?numrows=" + savedNumOfVulns + "&vendor_id=0&product_id=0&version_id=0&hasexp=0&opec=0&opov=0&opcsrf=0&opfileinc=0&opgpriv=0&opsqli=0&opxss=0&opdirt=0&opmemc=0&ophttprs=0&opbyp=0&opginf=0&opdos=0&orderby=1&cvssscoremin=" + minCVE;
        StringRequest request = new StringRequest(Request.Method.GET, ENDPOINT, onPostsLoaded, onPostsError);

        Log.d("URL", ENDPOINT);
        requestQueue.add(request);
    }

    private final Response.Listener<String> onPostsLoaded = new Response.Listener<String>() {
        @Override
        public void onResponse(String response) {

            Log.d("DATA", response);
            GetVulnerabilities downloadData = new GetVulnerabilities();

            arrayAdapter = new ArrayAdapter<Vulnerability>(
                    MainActivity.this,R.layout.list_item, downloadData.processResult(response)
            );

            //Update the UI
            mainupdateUI();
        }
    };

    private final Response.ErrorListener onPostsError = new Response.ErrorListener() {
        @Override
        public void onErrorResponse(VolleyError error) {
            Log.e("Error", error.toString());
        }
    };


    private void mainupdateUI()
    {
        getSavedVulns();
        arrayAdapter.addAll(SavedVulns);

        getListView().setAdapter(arrayAdapter);
        swipeRefresh.setRefreshing(false);

    }

    private ListView getListView()
    {
        return listView;
    }
}
