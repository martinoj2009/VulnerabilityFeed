package com.martinojones.vulnerabilityfeed;

import android.app.Application;
import android.content.Context;
import android.net.ConnectivityManager;
import android.os.AsyncTask;
import android.os.Bundle;
import android.support.v7.app.AppCompatActivity;
import android.util.Log;
import android.view.View;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.ListView;
import android.widget.Toast;

import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;

public class MainActivity extends AppCompatActivity {

    private String mFileContents;
    private Button btnParse;
    private ListView listView;
    private DownloadData downloadData = new DownloadData();
    private String DOWNLOADURL = "https://www.cvedetails.com/vulnerability-feed.php?vendor_id=0&product_id=0&version_id=0&orderby=1&cvssscoremin=0";

    @Override
    protected void onCreate(Bundle savedInstanceState)
    {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        downloadData.execute(DOWNLOADURL);
        btnParse = (Button) findViewById(R.id.btn_pass);
        listView = (ListView) findViewById(R.id.xmlListView);


        btnParse.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                //TODO Add parse activation code

                downloadData.execute(DOWNLOADURL);
                ParseVulnerability pV = new ParseVulnerability(mFileContents);
                pV.process();
                ArrayAdapter<Vulnerability> arrayAdapter = new ArrayAdapter<Vulnerability>(
                        MainActivity.this,R.layout.list_item, pV.getVulnerabilitys());
                listView.setAdapter(arrayAdapter);
            }
        });


        //Sleep to give time for the XML to download
        try {
            Thread.sleep(1000);
        } catch (InterruptedException e) {

        }

        //Parse the XML if not null
        if(mFileContents == null)
        {
            Toast.makeText(getApplicationContext(), "Data took too long to download. Try the refresh button", Toast.LENGTH_SHORT).show();
        }
        else
        {
            ParseVulnerability pV = new ParseVulnerability(mFileContents);
            pV.process();
            ArrayAdapter<Vulnerability> arrayAdapter = new ArrayAdapter<Vulnerability>(
                    MainActivity.this,R.layout.list_item, pV.getVulnerabilitys());
            listView.setAdapter(arrayAdapter);
        }

    }


    private class DownloadData extends AsyncTask<String, Void, String>
    {

        @Override
        protected String doInBackground(String... params)
        {
            mFileContents = downloadXMLFile(params[0]);
            if(mFileContents == null)
            {
                Log.d("DownloadData", "Error downloading");
            }

            return mFileContents;
        }

        @Override
        protected void onPostExecute(String s) {
            super.onPostExecute(s);

            Log.d("DownloadData", "Result was: " + s);
        }

        private String downloadXMLFile(String urlPath)
        {
            StringBuilder tempBuffer = new StringBuilder();

            try
            {
                URL url = new URL(urlPath);
                HttpURLConnection connection = (HttpURLConnection) url.openConnection();
                int response = connection.getResponseCode();
                Log.d("DownloadData", "The response code was: " + response);

                InputStream is = connection.getInputStream();
                InputStreamReader isr = new InputStreamReader(is);

                int charRead;
                char[] inputBuffer = new char[500];

                while(true)
                {
                    charRead = isr.read(inputBuffer);
                    if(charRead <= 0)
                    {
                        break;
                    }
                    tempBuffer.append(String.copyValueOf(inputBuffer,0,charRead));
                }

                return tempBuffer.toString();
            }
            catch(IOException ex)
            {
                Toast.makeText(getApplicationContext(), "Data took too long to download. Try the refresh button", Toast.LENGTH_SHORT).show();
                Log.d("DownloadData", "IO Exception reading data: " + ex.getMessage());
            }
            catch(java.lang.SecurityException e)
            {
                Log.d("DownloadData", "Security exception!");
            }

            return null;
        }
    }
}
