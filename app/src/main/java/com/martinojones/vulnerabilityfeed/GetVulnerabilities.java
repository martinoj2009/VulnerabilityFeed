package com.martinojones.vulnerabilityfeed;

import android.app.Activity;
import android.util.Log;

import com.android.volley.Request;
import com.android.volley.RequestQueue;
import com.android.volley.Response;
import com.android.volley.VolleyError;
import com.android.volley.toolbox.StringRequest;
import com.android.volley.toolbox.Volley;
import com.google.gson.Gson;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import java.util.ArrayList;
import java.util.List;

/**
 * Created by dev on 17/02/2016.
 */
public class GetVulnerabilities extends Activity {

    private String LOG_TAG = GetVulnerabilities.class.getSimpleName();
    private List<Vulnerability> vulnerabilityList;


    public GetVulnerabilities()
    {

    }


    public List<Vulnerability> processResult(String JSON) {

        vulnerabilityList = new ArrayList<>();

        vulnerabilityList.clear();

        Log.d("GetVuln", "Started processing.");

        final String cveID = "cve_id";
        final String cveSummary = "summary";
        final String pubDate = "publish_date";
        final String cvsScore = "cvss_score";
        final String vulURL = "url";
        final String exploitCount = "exploit_count";


        try {

            JSONArray itemsArray = new JSONArray(JSON);



            for(int i=0; i<itemsArray.length(); i++) {

                JSONObject jsonVulnerability = itemsArray.getJSONObject(i);
                String title = jsonVulnerability.getString(cveID);
                String summary = jsonVulnerability.getString(cveSummary);
                String pDate = jsonVulnerability.getString(pubDate);
                String url = jsonVulnerability.getString(vulURL);
                float score = Float.parseFloat(jsonVulnerability.getString(cvsScore));
                String exCount = jsonVulnerability.getString(exploitCount);

                vulnerabilityList.add(new Vulnerability(title, summary, pDate, url, score, exCount));
            }

        } catch(JSONException jsone) {
            jsone.printStackTrace();
            Log.e(LOG_TAG, "Error processing Json data");
        }

        Log.e(LOG_TAG, "DONE processing vulnerabilities. ");

        return vulnerabilityList;

    }



    public List<Vulnerability> getVulnerabilities()
    {
        return vulnerabilityList;
    }


    public void clearVulns()
    {
        this.vulnerabilityList.clear();
    }

}